[project]
name = "torchlight"
dynamic = ["version"]
description = "Stream music and more for srcds games"
readme = "README.md"
authors = [
    {name = "BotoX", email = "github@botox.bz"},
]
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.10"
dependencies = [
    "Pillow",
    "aiohttp",
    "beautifulsoup4",
    "click",
    "defusedxml",
    "gTTS",
    "geoip2",
    "lxml",
    "python-magic",
    "yt-dlp @ git+https://github.com/yt-dlp/yt-dlp@master#egg=yt-dlp"
]

[project.scripts]
torchlight = "torchlight.cli:cli"

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["*.tests", "*.tests.*", "tests.*", "tests"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[project.optional-dependencies]
dev = [
    "memory_profiler",
    "mypy",
    "ruff",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
no_implicit_optional = true
show_error_codes = true
files = "src"

[tool.ruff]
target-version = "py310"
line-length = 120
exclude = [
    ".bzr",
    ".git",
    ".svn",
    ".hg",
    "typings"
]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "Q", # flake8-quotes-q
    "S",  # flake8-bandit-s
    "UP", # pyupgrade
    "W",  # pycodestyle
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
forced-separate = ["tests"]
known-local-folder = [
    "torchlight",
    "src",
    "tests"
]
known-first-party = [
]
# required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = [
    "F401"
]
"alembic/*" = [
    "S608", # Possible SQL injection vector through string-based query construction
]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    # "S603", # `subprocess` call: check for execution of untrusted input
]

[tool.ruff.lint.pycodestyle]
max-line-length = 120
